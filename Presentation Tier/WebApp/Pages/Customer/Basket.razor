@page "/basket"
@using WebApp.Data
@using WebApp.Models
@using MudBlazor
@using global::Models

@inject IBasketService BasketService
@inject NavigationManager NavigationManager

<h3>Basket</h3>
@if (recipesInBasket == null)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else if (!recipesInBasket.Any())
{
    <p>
        <em>Nothing in basket.</em>
    </p>
}
else
{
    <MudTable Items="@recipes" Hover="true" Breakpoint="Breakpoint.Sm">
        <HeaderContent>
            <MudTh>Amount</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Price</MudTh>
            <MudTh> </MudTh>
        </HeaderContent>
        <RowTemplate>
            @foreach (var item in recipes)
            {
                <MudTd DataLabel="Amount">@item.Amount</MudTd>
                <MudTd DataLabel="Name">@item.Name</MudTd>
                <MudTd DataLabel="Price">@item.Price</MudTd>
                <MudTd>
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="() => RemoveBasketItem(item)">Remove</MudButton>
                </MudTd>
            }
        </RowTemplate>
        <RowTemplate>
            <MudTd DataLabel="Total amount">@totalAmount</MudTd>
            <MudTd DataLabel="Total price">@totalPrice</MudTd>
        </RowTemplate>
    </MudTable>
}
@code {
    private IList<BasketItem> recipesInBasket = new List<BasketItem>();
    private IList<Recipe> recipes = new List<Recipe>();
    private int? totalAmount { get; set; }
    private double? totalPrice { get; set; }

    protected override async Task OnInitializedAsync()
    {
        recipesInBasket = await BasketService.GetAllBasketItems();
        recipes = await BasketService.GetAllBasketRecipes();
    }

    private void RemoveBasketItem(Recipe recipe)
    {
        BasketService.RemoveRecipe(recipe);
    }
}