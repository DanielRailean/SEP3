@page "/basket"
@using WebApp.Data
@using WebApp.Models
@using MudBlazor
@using global::Models

@inject IBasketService BasketService
@inject NavigationManager NavigationManager

<h3>Basket</h3>
@if (recipesInBasket == null)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else if (!recipesInBasket.Any())
{
    <p>
        <em>Nothing in basket.</em>
    </p>
}
else
{
    <MudTable Items="@recipesInBasket" Hover="true" Breakpoint="Breakpoint.Sm">
        <HeaderContent>
            <MudTh>Amount</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Price (DKK)</MudTh>
            <MudTh> </MudTh>
        </HeaderContent>
        <RowTemplate>
            @foreach (var item in recipesInBasket)
            {
                <MudTd DataLabel="Amount">@item.Amount</MudTd>
                <MudTd DataLabel="Name">@item.Name</MudTd>
                <MudTd DataLabel="Price">@item.Price</MudTd>
                <MudTd>
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="() => RemoveBasketItem(item)">Remove</MudButton>
                </MudTd>
            }
        </RowTemplate>
        <RowTemplate>
            <MudTd DataLabel="Total amount">@totalAmount</MudTd>
            <MudTd DataLabel="Total price">@totalPrice</MudTd>
        </RowTemplate>
    </MudTable>
}
@code {
    private IList<Recipe> recipesInBasket = new List<Recipe>();
    private IList<BasketItem> itemsInBasket = new List<BasketItem>();
    private int? totalAmount;
    private double? totalPrice;

    protected override async Task OnInitializedAsync()
    {
        itemsInBasket = await BasketService.GetAllBasketItems();
        recipesInBasket = await BasketService.GetAllBasketRecipes();
        CalculateTotalAmountAndPrice();
    }

    private void RemoveBasketItem(Recipe recipe)
    {
        BasketService.RemoveRecipe(recipe);
    }

    private void CalculateTotalAmountAndPrice()
    {
        totalPrice = 0;
        totalAmount = 0;
        foreach (var item in recipesInBasket)
        {
            totalPrice += item.Price;
            totalAmount += item.Amount;
        }
    }
}