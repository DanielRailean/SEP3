@page "/"
@using WebApp.Models
@using WebApp.Data
@using MudBlazor
@using System.ComponentModel.DataAnnotations

@inject NavigationManager NavigationManager
@inject IRecipeService RecipeService
@inject IBasketService BasketService

<h1>Welcome to GodEats!</h1>

<p> We are offering several variety of recipes from the best ingredient suppliers. </p>
<p> Calories are counted for every 100 g of intake. </p>

@if (recipes == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!recipes.Any())
{
    <p>
        <em>No recipes found.</em>
    </p>
}
else
{
@*     <div class="grid-container"> *@
        @* @foreach (Recipe item in recipesToShow) *@
        @* { *@
        @*     <div class="grid-item"> *@
        @*         <tr> *@
        @*             <img src=@item.Image/> *@
        @*             <td>@item.Name</td> *@
        @*             <td>@item.Type</td> *@
        @*             <td>@item.MinutesToMake</td> *@
        @*             <td>@item.Price</td> *@
        @*             <td>@item.Calories</td> *@
        @*         </tr> *@
        @*     </div> *@
        @* } *@
    // </div>
    <MudGrid>
        @foreach (Recipe item in recipesToShow)
        {
            <MudItem xs="20">
                <MudGrid Justify="Justify.SpaceBetween">
                    <MudCard>
                        <MudCardContent @bind-Value="recipe">
                            <MudCardMedia Image="@item.Image"/>
                            <MudText>@item.Name</MudText>
                            <MudText>@item.Price</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudNumericField @bind-Value="amount" Label="Amount" Color="Color.Primary"/>
                            <MudButton @onclick="AddToBasket" Variant="Variant.Filled" Color="Color.Primary">Add to basket</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudGrid>
            </MudItem>
        }
    </MudGrid>
}


@code {
    private IList<Recipe> recipes = new List<Recipe>();
    private IList<Recipe> recipesToShow = new List<Recipe>();
    private Recipe recipe;
    [Required, Range(1, 10)]
    private int amount;

    private BasketItem basketItem;

    protected override async Task OnInitializedAsync()
    {
        recipes = await RecipeService.GetAllRecipesAsync();
        recipesToShow = recipes;
    }

    private void AddToBasket()
    {
        basketItem = new BasketItem();
        basketItem.Amount = amount;
        basketItem.RecipeId = recipe.Id;
        BasketService.AddRecipe(basketItem);
    }
}