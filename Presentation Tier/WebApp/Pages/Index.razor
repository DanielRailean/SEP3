@page "/"
@using WebApp.Data
@using MudBlazor

@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@using global::Models
@using Microsoft.AspNetCore.Components

@inject IRecipeService RecipeService
@inject IBasketService BasketService
@inject NavigationManager NavigationManager

<h1>Welcome to GodEats!</h1>

<p> We are offering several variety of recipes from the best ingredient suppliers. </p>
<p> Calories are counted for every 100 g of intake. </p>

@if (recipesToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!recipesToShow.Any())
{
    <p>
        <em>No recipes found.</em>
    </p>
}
else
{
     <h1>@error</h1>

    <div class="allItems">
        @foreach (Recipe item in recipesToShow)
        {
           
            <div class="card">
                <div class="card-image"  style="background-image: url('@item.Image'); background-repeat:no-repeat; background-size:cover; width:100% ; height: 25rem " >
                    
                    <div ></div> 
                       
                </div>
                <div class="card-content">
                    <div class="media">
                        <div class="media-left">
                            <figure class="image is-48x48">
                                <img src="@item.Image" alt="@item.Name">
                            </figure>
                        </div>
                        <div class="media-content">
                            <p class="title is-4">@item.Name</p>
                            <p class="subtitle is-6"></p>
                        </div>
                    </div>

                    <div class="content">
                           <div class="item">
                               <p>@item.Price DKK</p>
                                             
                                     <input class="input" type="number" @bind="@item.Amount" Label="Amount" Color="Color.Primary"/>
                                     <Button class="button is-link is-light" @onclick="() => ShowRecipeDetails(item)" Variant="Variant.Filled" Color="Color.Tertiary">More</Button>
                                     <Button class="button is-link is-light" @onclick="async() => await AddToBasket(item)" Variant="Variant.Filled" Color="Color.Primary">Add to basket</Button>
                                             
                                 </div>
                      
                    </div>
                </div>
            </div>
                    
                 }
    </div>
    <h5>
     Cart contents: @cartContents;
         <br>
         <br>
     </h5>
}

@code {
    private IList<Recipe> recipesToShow = new List<Recipe>();
    private Recipe recipe;
    [Required, Range(1, 10)]

    private int counter;

    private string error;
    private string cartContents;

    protected override async Task OnInitializedAsync()
    {
        recipesToShow = await RecipeService.GetAllRecipesAsync();
        foreach (var item in recipesToShow)
        {
            item.Amount = 1;
        }
        await updateBasket();
    }

    private async Task AddToBasket(Recipe recipe)
    {
        try
        {
            await BasketService.AddRecipe(recipe);
        }
        catch (Exception e)
        {
            error = e.Message;
        }
        recipe.Amount = 1;
        await updateBasket();
    }

    private async Task updateBasket()
    {
        cartContents = JsonSerializer.Serialize(await BasketService.GetAllBasketItems());
    }
      
    private void ShowRecipeDetails(Recipe item)
    {
        NavigationManager.NavigateTo($"/recipedetail/{item.Id}");
    }
}